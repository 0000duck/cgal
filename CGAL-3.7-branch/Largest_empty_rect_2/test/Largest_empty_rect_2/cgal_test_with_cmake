#! /bin/sh

# This is a script for the CGAL test suite. Such a script must obey
# the following rules:
#
# - the name of the script is cgal_test_with_cmake
# - for every target two one line messages are written to the file 'error.txt'
#     the first one indicates if the compilation was successful
#     the second one indicates if the execution was successful
#   if one of the two was not successful, the line should start with 'ERROR:'
# - running the script should not require any user interaction
# - the script should clean up object files and executables

  ERRORFILE=error.txt
  DO_RUN=y
  if [ -z "${MAKE_CMD}" ]; then
    MAKE_CMD=make
  fi
  NEED_CLEAN=

#---------------------------------------------------------------------#
#                    configure
#---------------------------------------------------------------------#

configure()
{
  echo "Configuring... "
  
  if eval 'cmake "$CMAKE_GENERATOR" -DRUNNING_CGAL_AUTO_TEST=TRUE  \
                                     -DCGAL_DIR="$CGAL_DIR" \
                                     -DCMAKE_BUILD_TYPE=NOTFOUND \
                                     .' ; then
                                     
    echo "   succesful configuration" >> $ERRORFILE
  else
    echo "   ERROR:    configuration" >> $ERRORFILE
  fi
}

#---------------------------------------------------------------------#
#                    compile_and_run <target>
#---------------------------------------------------------------------#

CMP='diff -b'

run()
{
  data_dir="data"
  datafiles="data/data*"
  for DATAFILE in ${datafiles}
  do
    if [ -f $DATAFILE ] ; then
      DATANAME=`basename $DATAFILE`
      OUTPUTFILE=ProgramOutput.$1.$DATANAME.$PLATFORM
      rm -f $OUTPUTFILE
      COMMAND="./$1 $DATAFILE > ${data_dir}/out"
      echo "Executing ./$1 $DATAFILE > ${data_dir}/out"
      echo
      if eval 2>&1 $COMMAND > $OUTPUTFILE ; then
	  echo "   execution of $1 ${data_dir}/${DATAFILE} > ${data_dir}/out succeeded" >> $ERRORFILE
	  if ${CMP} ${data_dir}/out "${data_dir}/gold_$DATANAME" ; then
	      echo "   no differences between output and gold were found" >> $ERRORFILE
	  else
	      echo "   ERROR:  differences between output and gold were found" >> $ERRORFILE
	      echo "   ERROR:  differences between output and gold were found :" >> $OUTPUTFILE
              ${CMP} ${data_dir}/out "${data_dir}/gold_$DATANAME" >> $OUTPUTFILE
	  fi
      else
	  echo "   ERROR: execution of $1 $DATAFILE $2 ${data_dir}/out failed" >> $ERRORFILE
      fi
    else
      echo "   ERROR: could not execute $1" >> $ERRORFILE
    fi
  done
}

compile_and_run()
{
  echo "Compiling $1 ... "
  SUCCES="y"
  
  if eval '${MAKE_CMD} VERBOSE=1 -fMakefile $1' ; then
    echo "   succesful compilation of $1" >> $ERRORFILE
  else
    echo "   ERROR:    compilation of $1" >> $ERRORFILE
    SUCCES=""
  fi

  run "$1"
}

#---------------------------------------------------------------------#
#                    remove the previous error file
#---------------------------------------------------------------------#

rm -f $ERRORFILE
touch $ERRORFILE

#---------------------------------------------------------------------#
#                    configure, compile and run the tests
#---------------------------------------------------------------------#

configure

if [ $# -ne 0 ] ; then
  for file in $* ; do
    compile_and_run $file
  done
else
  echo "Run all tests."
if  ${MAKE_CMD} -f Makefile help | grep "test" > /dev/null; then 
  compile_and_run test
  NEED_CLEAN=y
fi
fi

#
# The clean target generated by CMake under cygwin 
# always fails for some reason
#
if [ -n "${NEED_CLEAN}" ]; then 
  if ! ( uname | grep -q "CYGWIN" ) ; then
    ${MAKE_CMD} -fMakefile clean
  fi
fi
