#!/bin/sh
# collect_cgal_testresults_from_cmake
# ===================================
# collect all files to generate the html page
# containing the testsuite results
#
# to be run in the CGAL/test directory or a local test directory.
# CGAL_TESTER, CGAL_TESTER_NAME, CGAL_TESTER_ADDRESS are environment variables.

if [ -z "${CGAL_TEST_HOST}" ]; then
  CGAL_TEST_HOST='localhost'
  echo "CGAL_TEST_HOST not in the enviroment, setting it to ${CGAL_TEST_HOST}"
fi

if [ -z "${CGAL_TEST_PLATFORM}" ]; then
   
  CGAL_TEST_PLATFORM=`dirname $PWD` 
  echo "CGAL_TEST_PLATFORM not in the enviroment, setting it to ${CGAL_TEST_PLATFORM}"
fi

if [ -z "$1" ] ; then
  TEST_DIRECTORIES=`ls`
else
  TEST_DIRECTORIES="$*"
fi

BUILD_LOGFILE=''
TEST_REPORT=''
RESULT_FILE=''

#print_testresult <platform> <directory>
print_testresult()
{
  if [ ! -f ErrorOutput_$1 ] ; then
    RESULT="?"
  else
    if eval grep ERROR ErrorOutput_$1 > /dev/null ; then
      RESULT="n"
    else
      if eval grep -i warning CompilerOutput_$1 | grep -v 'read_only_relocs,warning' > /dev/null
      then
        RESULT="w"
      else
        RESULT="y"
      fi
    fi
  fi
  echo "$2 $RESULT"
}


parse_flags_and_third_party_choices()
{
  if grep "Building shared libraries"  ${BUILD_LOGFILE}; then
    shared_or_static='shared'  
  else
    shared_or_static='static'  
  fi

  grep "^USING " ${BUILD_LOGFILE} >> $RESULT_FILE 
  echo "------------" >> $RESULT_FILE
}

parse_lib_building_results()
{
  libname=$1
  target=$2
  
  mkdir "${libname}_${shared_or_static}"
  
  y_or_no='n'
  
  if grep -q "Built target ${target}$" ${BUILD_LOGFILE} ; then
    y_or_no='y'
  fi
   
  marker_beg=`grep "${target}.dir/depend$" ${BUILD_LOGFILE}`
  
  if [ -n "${marker_beg}" ]; then
    cat ${BUILD_LOGFILE} | sed -n "\|${marker_beg}|,\|depend$| p" > ${libname}_${shared_or_static}/$TEST_REPORT
    
    # Test if there is a warning in the build log.
    if [ "$y_or_no" = "y" ]; then
      if grep -i warning ${libname}_${shared_or_static}/$TEST_REPORT | grep -v 'read_only_relocs,warning' > /dev/null; then
        y_or_no='w'
      fi
    fi
    
  else
    echo "Not configured!" > ${libname}_${shared_or_static}/$TEST_REPORT
  fi
  
  echo ${libname}_${shared_or_static} $y_or_no >> $RESULT_FILE
}


echo "---------------------------------------------------------------"
echo "   Collecting results of platform $CGAL_TEST_PLATFORM"
echo "---------------------------------------------------------------"

CURRENT_DIR=`pwd`
TESTER=${CGAL_TESTER:-${USER:-`whoami`}}
TESTER_NAME="${CGAL_TESTER_NAME:-${TESTER}}"
TESTER_ADDRESS="${CGAL_TESTER_ADDRESS:-${TESTER}}"
TEST_REPORT="TestReport_${TESTER}_${CGAL_TEST_PLATFORM}"
RESULT_FILE=$CURRENT_DIR/results_${TESTER}_${CGAL_TEST_PLATFORM}.txt
CGAL_DIR=../../../..
BUILD_LOGFILE="../installation.log.${CGAL_TEST_HOST}"
echo "build log file: ${BUILD_LOGFILE}"  
rm -f $RESULT_FILE
touch $RESULT_FILE
sed -n '/CGAL_VERSION /s/#define //p' < $CGAL_DIR/include/CGAL/version.h >> $RESULT_FILE
echo "TESTER ${TESTER}" >> $RESULT_FILE
echo "TESTER_NAME ${TESTER_NAME}" >> $RESULT_FILE
echo "TESTER_ADDRESS ${TESTER_ADDRESS}" >> $RESULT_FILE
echo "CGAL_TEST_PLATFORM ${CGAL_TEST_PLATFORM}" >> $RESULT_FILE

if [ -f "${BUILD_LOGFILE}" ] ; then

  parse_flags_and_third_party_choices
  
  parse_lib_building_results "libCGALCore"    "CGAL_CORE"    
  parse_lib_building_results "libCGAL"        "CGAL"         
  parse_lib_building_results "libCGALimageIO" "CGAL_IMAGEIO" 
  parse_lib_building_results "libCGALPDB"     "CGAL_PDB"     
  parse_lib_building_results "libCGALQt"      "CGAL_QT"      
  
else
  echo "ERROR: Installation log ${BUILD_LOGFILE} not found!"
fi


for DIR in $TEST_DIRECTORIES ; do
  if [ -d $DIR ] ; then
    echo "  $DIR ..."
    cd $DIR

    print_testresult $CGAL_TEST_PLATFORM $DIR >> $RESULT_FILE

    rm -f ${TEST_REPORT}
    touch $TEST_REPORT

    if [ ! -f ErrorOutput_${CGAL_TEST_PLATFORM} ] ; then
      echo "Error: file $DIR/ErrorOutput_${CGAL_TEST_PLATFORM} does not exist!"
    else
      cat ErrorOutput_${CGAL_TEST_PLATFORM} >> $TEST_REPORT
    fi

    if [ ! -f CompilerOutput_${CGAL_TEST_PLATFORM} ] ; then
      echo "Error: file $DIR/CompilerOutput_${CGAL_TEST_PLATFORM} does not exist!"
    else
      cat CompilerOutput_${CGAL_TEST_PLATFORM} >> $TEST_REPORT
    fi

    if 2>&1 eval ls ProgramOutput.*.${CGAL_TEST_PLATFORM} > /dev/null ; then
      PROGRAM_OUTPUT=`ls ProgramOutput.*$CGAL_TEST_PLATFORM*`
      for FILE in $PROGRAM_OUTPUT ; do
        echo >> $TEST_REPORT
        echo "------------------------------------------------------------------" >> $TEST_REPORT
        echo "- $FILE" >> $TEST_REPORT
        echo "------------------------------------------------------------------" >> $TEST_REPORT
        cat $FILE >> $TEST_REPORT
      done
    fi

    cd ..
  fi
done

OUTPUT_FILE=results_${TESTER}_${CGAL_TEST_PLATFORM}.tar
rm -f $OUTPUT_FILE $OUTPUT_FILE.gz
tar cf $OUTPUT_FILE results_${TESTER}_${CGAL_TEST_PLATFORM}.txt */$TEST_REPORT
echo
echo "compressing ..."
gzip -9f $OUTPUT_FILE
echo "results written to file $OUTPUT_FILE.gz"
echo

