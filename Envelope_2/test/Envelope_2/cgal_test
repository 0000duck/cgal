#! /bin/bash

# This is a script for the CGAL test suite. Such a script must obey
# the following rules:
#
# - the name of the script is cgal_test
# - for every target two one line messages are written to the file 'error.txt'
#     the first one indicates if the compilation was successful
#     the second one indicates if the execution was successful
#   if one of the two was not successful, the line should start with 'ERROR:'
# - running the script should not require any user interaction
# - the script should clean up object files and executables

ERRORFILE=error.txt

#---------------------------------------------------------------------#
#                    compile_and_run <target>
#---------------------------------------------------------------------#

compile_test()
{
  local name=$1;
  
  echo "Compiling $name ... "
  if eval 'make CGAL_MAKEFILE=$CGAL_MAKEFILE $name'; then
    echo "   succesful compilation of $name" >> $ERRORFILE;
    res=1;
  else
    echo "   ERROR:    compilation of $name" >> $ERRORFILE;
    res=0;
  fi
}

run_test()
{
  local name=$1;
  local datafile=$2;
  local format=$3;

  basedata=`basename "$datafile"`
  OUTPUTFILE=ProgramOutput.$basedata.$name.$PLATFORM
#  dirdata=`dirname "$datafile"`
  rm -f $OUTPUTFILE
  COMMAND="./$name"
  echo "Executing $name $datafile $format ... "
  echo
  if eval $COMMAND $datafile $format > $OUTPUTFILE 2>&1 ; then
    echo "   succesful execution of $name $datafile" >> $ERRORFILE
  else
    echo "   ERROR:    execution of $name $datafile" >> $ERRORFILE
  fi
}

clean_tests()
{
  eval "make CGAL_MAKEFILE=$CGAL_MAKEFILE clean > /dev/null 2>&1 "
}

#---------------------------------------------------------------------#
# segment envelope
#---------------------------------------------------------------------#
test_segment_envelope()
{
  compile_test test_envelope_segments

  if [ ${res} -eq 0 ] ; then
    echo   "   ERROR:    not executed   test_traits" >> $ERRORFILE
  else
    run_test test_envelope_segments data/segs_4.dat -i
    run_test test_envelope_segments data/random_500.dat -i
    run_test test_envelope_segments data/onebig_100.dat -i
    run_test test_envelope_segments data/Europe.dat -d
  fi
  clean_tests
}

#---------------------------------------------------------------------#
#                    remove the previous error file
#---------------------------------------------------------------------#

rm -f $ERRORFILE
touch $ERRORFILE

#---------------------------------------------------------------------#
#                    compile and run the tests
#---------------------------------------------------------------------#

make clean
test_segment_envelope
