
__________________________________________________________________________RENAMING

*) doc :
--------

*) code not done :
------------------

bring part of Delaunay::remove into TDS (see comments in Delaunay_triangulation.h, and item FUTURE below)

__________________________________________________________________________ALL

*) FUTURE: better system for simplex's flags to know if we can use them or not
    in Delaunay_triangulation::remove(Vertex_handle)

_________________________________________________TRIANGULATION_DATA_STRUCTURE

*) TriangulationDataStructure:
  - Should we put >> and << in the documentation of the class
    Triangulation_data_structure ?

*) Triangulation_data_structure.h:
  - Ensure that it is topologically possible to collapse the Face in
    collapse_face(Face)

*) TriangulationDSVertex
  - Should we put >> and << in the documentation of the class
    Triangulation_ds_vertex instead of in that of the concept ?

*) TDSFullCellStoragePolicy
   what is it ? => see the doc.
   it is undocumented. => it is documented (Triangulation_ds_full_cell)
   if the aim is to choose between "full representation" and "1-skeleton"
   I would prefer a different TDS class, at least the doc has to rewriten a sentence
   like "class TDS explicitely stores its vertices and full cells" 
   does not apply to 1-skeleton representation
   => no, this has nothing to do with 1-skeleton.

*) default dim parameter in constructor (especially in the static case)

________________________________________________________________TRIANGULATION

*) default dim parameter in constructor (especially in the static case)

*) Why vertex at infinity should have index 0 in all cells it appears ?
    This is a convention that is enforced throughout the code. Makes it faster
    to check for an infinite cell.
    The "old" package "Convex_hull_d" does the same.

_______________________________________________________DELAUNAY_TRIANGULATION

________________________________________________________REGULAR_TRIANGULATION

*) write Regular_triangulaion.h (!)
*) write RegularTriangulationTraits.tex
*) write Regular_triangulation.tex
