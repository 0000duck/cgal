9 March 2006 Joachim Reichel
- LGPL copyright notice added to src/CGALQt/kds{,_deps}.makefile

9 March 2006 Andreas Fabri
- Made heading of user and reference manual to be the same

July 2006 Daniel Russel
- removed time in process function calls
- changed Simulator to Default_simulator

August 2006 Daniel Russel
- added set_has_certificates to Delaunay_2
- added degeneracy handling to Event (a set of new, optional methods)--All events should inherit from Event_base
- infinity is not needed for roots any more

- to_static replaced with Current_coordinates functor in instantaneous kernel
- the Delaunay_triangulation_2 doesn't require that the Triangulation use an Instantaneous_kernel (if you don't insert or erase)
- removed set_end_time/set_end_priority replaced with set_interval

January 2007 Daniel Russel
- Changed how to find and deal with rational times (and made them less necessary). First, the InstantaneousKernel now can use an instance of Time as the current time (in that case it falls back to slower evaluation schemes). Second, in the simulator to figure out when to perform actions that require a rational time you call next_time_representable_as_nt() and then advance the simulator to that time (and use the returned time value to do your work). 
- Changed most types named NT to FT to be consistent with CGAL
- Collapsed Polynomial_NS::Sign into CGAL::Sign and elimanated Polynomial_NS::sign and Polynomial_NS::compare
- You must check if a certificate fails or not before accessing the root by calling the will_fail() method.
- Added example for defining a simulation_traits class which shows how to add data to a point type.
- Standardize names in KineticKernel to be those of the cgal kernels. This included removing the Less functors and only having Compare functors.
- Standardized look of FunctionKernel predicates to take all arguments at once
- Changed Sign_above to Sign_after
- Traits classes are now dimension independent.
- Kinetic::Kinetic_kernel is now called Kinetic::Cartesian to be consistent with the
  static one
- Added auditing for events through the Event::audit method and the Simulator::audit_event method. This means KDSs can check for extra events and for events which the simulator does not know about.