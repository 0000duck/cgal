9 March 2006 Joachim Reichel
- LGPL copyright notice added to src/CGALQt/kds{,_deps}.makefile

9 March 2006 Andreas Fabri
- Made heading of user and reference manual to be the same

July 2006 Daniel Russel
- removed time in process function calls
- changed Simulator to Default_simulator

August 2006 Daniel Russel
- added set_has_certificates to Delaunay_2
- added degeneracy handling to Event (a set of new, optional methods)--All events should inherit from Event_base
- infinity is not needed for roots any more

- to_static replaced with Current_coordinates functor in instantaneous kernel
- the Delaunay_triangulation_2 doesn't require that the Triangulation use an Instantaneous_kernel (if you don't insert or erase)
- removed set_end_time/set_end_priority replaced with set_interval

September 2006 Daniel Russel
- added event auditing
- change has_rational_current_time to has_current_time_as_nt() to one function next_time_representable_as_nt
- changed some NT to FT to be consistent with CGAL
- collapsed polynomial_NS::Sign into CGAL::Sign
- you must check if a certificate fails or not before accessing the root
- added example for defining a simulation_traits class
- standardize names in kinetickernel to be those of the cgal kernels
- standardized look of functionkernel predicates to take all arguments at once
- changed Sign_above to Sign_after
- computation of the sign after the current time is now exposed through the kinetic predicates
- traits classes are now dimension independent

Future Daniel Russel
- when using numeric solvers, evaluate the static predicates first before solving?
- make adding points to table optional, they just control notification. Keys are the same as points (so points are ref counted pointers. 
- move table to a list and make key the same as object (i.e. the key is the Point_2) this will help filtering and things and mean the table can be ignored if desired. Make the tables simply an event manager rather than owning the points (so points have internal pointer which can be used in a map and copied cheaply). Need easy mapping of point to data--property maps?
- have Sturm first try to prove there are no roots-- say Descartes once or interval
- link kinetic and instantnaeous predicates-how?
- make sorting general- solve linking first
- times can generate certificate func and solve. Queue checks if they are dirty (a point changed--when check? that is hard--maybe collapse to front of interval if need exact and is dirty) and reinserts them if they are. Points are ref counted pointers. With interval rep and way to generate exact. Then just insert notifications. Dirty is keept by generation count per point. Time is k ints, k points, inexact func, interval--broken-what if time moves up? Need linear scans.

known bugs:
- If, on insertion into a Del_3 the current time must be advanced past an event which invalidates the cell handle that is used to insert the vertex, then there is a problem. To fix this check all the paths for insert and protect this method behind ones which set the time before locate. Make that IK and S times are equal a precondition. 
- Two list queue should make sure it steps off the dividing element. 


make core_traits and test them
make regular_inexact
