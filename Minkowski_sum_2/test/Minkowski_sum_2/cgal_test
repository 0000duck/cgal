#! /bin/bash

# This is a script for the CGAL test suite. Such a script must obey
# the following rules:
#
# - the name of the script is cgal_test
# - for every target two one line messages are written to the file 'error.txt'
#     the first one indicates if the compilation was successful
#     the second one indicates if the execution was successful
#   if one of the two was not successful, the line should start with 'ERROR:'
# - running the script should not require any user interaction
# - the script should clean up object files and executables

ERRORFILE=error.txt

#---------------------------------------------------------------------#
#                    compile_and_run <target>
#---------------------------------------------------------------------#

compile_test()
{
  local name=$1;
  
  echo "Compiling $name ... "
  if eval 'make CGAL_MAKEFILE=$CGAL_MAKEFILE $name'; then
    echo "   succesful compilation of $name" >> $ERRORFILE;
    res=1;
  else
    echo "   ERROR:    compilation of $name" >> $ERRORFILE;
    res=0;
  fi
}

run_test_Minkowski_sum()
{
  local datafile=$1;
  local flags=$2;

  basedata=`basename "$datafile"`
  OUTPUTFILE=ProgramOutput.$basedata.test_Minkowski_sum.$PLATFORM
  first_file="$datafile"_part1.dat
  second_file="$datafile"_part2.dat
  
  rm -f $OUTPUTFILE
  COMMAND="./test_Minkowski_sum"
  echo "Executing $COMMAND $first_file $second_file $flags ... "
  echo
  if eval $COMMAND $first_file $second_file $flags > $OUTPUTFILE 2>&1 ; then
    echo "   succesful execution of test_Minkowski_sum $datafile" >> $ERRORFILE
  else
    echo "   ERROR:    execution of test_Minkowski_sum $datafile" >> $ERRORFILE
  fi
}

clean_tests()
{
  eval "make CGAL_MAKEFILE=$CGAL_MAKEFILE clean > /dev/null 2>&1 "
}

#---------------------------------------------------------------------#
# Minkowski sum test
#---------------------------------------------------------------------#
Minkowski_sum_tests()
{
  compile_test test_Minkowski_sum

  if [ ${res} -eq 0 ] ; then
    echo   "   ERROR:    not executed   test_Minkowski_sum" >> $ERRORFILE
  else
    run_test_Minkowski_sum data/rooms -sohg
    run_test_Minkowski_sum data/comb -sohg
    run_test_Minkowski_sum data/fork -soh
    run_test_Minkowski_sum data/knife -so
    run_test_Minkowski_sum data/mchain -sh
    run_test_Minkowski_sum data/random -sg
    run_test_Minkowski_sum data/wheels -hg
    run_test_Minkowski_sum data/r35975 -sohg
    run_test_Minkowski_sum data/r38305 -sohg
  fi
  clean_tests
}

#---------------------------------------------------------------------#
# Offset tests
#---------------------------------------------------------------------#
run_offset_test()
{
  local program=$1;
  local datafile=$2;
  local radius=$3;
  local flags=$4;

  basedata=`basename "$datafile"`
  OUTPUTFILE=ProgramOutput.$basedata.$program.$PLATFORM
  
  rm -f $OUTPUTFILE
  COMMAND="./$program"
  echo "Executing $COMMAND $datafile $radius $flags ... "
  echo
  if eval $COMMAND $datafile $radius $flags > $OUTPUTFILE 2>&1 ; then
    echo "   succesful execution of $program $datafile" >> $ERRORFILE
  else
    echo "   ERROR:    execution of $program $datafile" >> $ERRORFILE
  fi
}

offset_tests()
{
  compile_test test_exact_offset

  if [ ${res} -eq 0 ] ; then
    echo   "   ERROR:    not executed   test_exact_offset" >> $ERRORFILE
  else
    run_offset_test test_exact_offset data/random_part1.dat 5/1 -sohg
    run_offset_test test_exact_offset data/comb_part1.dat 1/1 -sohg
    run_offset_test test_exact_offset data/wheels_part1.dat 100000/1 -sohg
  fi

  compile_test test_approx_offset

  if [ ${res} -eq 0 ] ; then
    echo   "   ERROR:    not executed   test_approx_offset" >> $ERRORFILE
  else
    run_offset_test test_approx_offset data/rooms_part1.dat 3/1 -sohg
    run_offset_test test_approx_offset data/comb_part1.dat 1/1 -so
  fi

  clean_tests
}

#---------------------------------------------------------------------#
#                    remove the previous error file
#---------------------------------------------------------------------#

rm -f $ERRORFILE
touch $ERRORFILE

#---------------------------------------------------------------------#
#                    compile and run the tests
#---------------------------------------------------------------------#

Minkowski_sum_tests
offset_tests
