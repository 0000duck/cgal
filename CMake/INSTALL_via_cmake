 
INSTALL
-------------------------------------------------------------------------------
This file describes how to install CGAL.

The documentation of CGAL is available in various formats (HTML,
PostScript, PDF). It is not bundled with the software but can be
downloaded separately at <http://www.cgal.org/Manual>.

For more information about CGAL, see the <http://www.cgal.org/>.


To install CGAL, you should:

 --------------------------- 
 - setup the pre-requisites:
 ---------------------------
  
   * install CMake 2.4-patch-5 or later (www.cmake.org)
     CMake is the build system used by CGAL.
     
   * install the Boost libraries (www.boost.org)
     Boost is required to build CGAL.
     
   * install optional additional libraries:
        
       - qt3 (trolltech.com/products/qt)
       
           Used by most Demos
           
       - gmp   (gmplib.org)
       - mpfr  (www.mpfr.org)
       - leda  (www.algorithmic-solutions.com/leda/index.htm)
       
           Used for exact arithmetic
       
     
 --------------------------------------------------------------------------------- 
 - download the compressed archive file from the CGAL web site http://www.cgal.org
 ---------------------------------------------------------------------------------- 
 
 ------------------
 - unpack the file
 -----------------

 ------------------------------ 
 - configure the CGAL libraries
 ------------------------------ 
 
    for a single configuration you can run the following command 
    from the root folder:
    
       cmake . (notice the "current directory" argument)
     
    for a multi-configuration (different compilers, or release/debug, etc) you need to:
     
      create a folder for each configuration and from within that folder
      run the following command:
      
        cmake <path-to-cgal-root>
        
    if you see any errors during configuration, run cmake again with the same arguments.
    (CMake uses a cache system that might require a second pass through it)
    
    CMake will try to locate the libraries used and required
    by CGAL. These libraries are detailed in the CGAL install notes at
    <http://www.cgal.org/Manual/doc_html/installation_manual/contents.html>.
        
  -------------------------------------- 
  - build and install the CGAL libraries 
  -------------------------------------- 
  
    run the following commands from the configuration folder 
    (or the root folder if a single configuration was used)
  
        make
        make install
        
  --------------------------------------------- 
  - configure and build applications using CGAL
  - (such as demos, examples, etc)        
  ---------------------------------------------
  
    define the enviroment variable CGAL_DIR to a given configuration folder.
    
    for example, if you built a debug version by running
    
       cmake ../../..
    
    under folder
    
      CGAL-3.4/cmake/platforms/debug
      
    type
      
      export CGAL_DIR=CGAL-3.4/cmake/platforms/debug
       
    Or, if you built cgal for a single configuration
    running "cmake ." directly from CGAL-3.4,
    type:
    
      export CGAL_DIR=CGAL-3.4
      
    cd into the folder containing the CGAL application.
    for example:
      
      cd CGAL-3-4/demo/Alpha_shapes_2
       
    run cmake "in-source" (passing the current folder as argument)
       
      cmake .
      
    build the application
      
      make
      

  ---------------------------
  - Configuration Variables
  ---------------------------

    There are a number of choices for building CGAL which are
    controlled by configuration variables.
    See the installation manual for a detailed list of them:
    <http://www.cgal.org/Manual/doc_html/installation_manual/contents.html>.

    You can define any such variable in the call to cmake:
    
       cmake -DVARIABLE=VALUE <path-to-sources>
       
    Alternatively, you can run cmake in "wizard mode" via the "-i" 
    command-line option, in which case cmake will ask you to
    confirm or override the default value of each variable.
      
    Also, you can run cmake in GUI mode in which case you can
    see and edit in a dialog all configuration variables before 
    proceeding with the configuration.
    To do that run the GUI configuration editor "CMakeSetup" 
    When the editor is launched press "configure" for the first time:
    all available configuration variables and their default values
    will be displayed on a red background.
    That red background tells you that the variable has been "seen"
    for the first time and you may wish to change its value.
    You can then override the default value of any variable
    (for example to fix the path to a NOTFOUND third party library,
    such as gmp, or to enable/disable a library such as CGAL_IMAGE_IO).
    When you are finished and all the displayed variables have the correct
    values press "configure" again. All the previously displayed variables
    will show up now in a normal background, meaning that you have
    "accepted" their values. There can be still variables with the "wrong"
    value (since the red doesn't mean it's right or wrong, only that
    it's new) so check again all variables.
    If any variable shows up just now (for the first time, in red),
    it means some previously accepted variable caused this one to 
    become active; edit it, if neccesary, or accept its default
    value by pressing "configure" once again.
    Once pressing configure doesn't result in new variables being displayed,
    and all variables have their correct value, press OK to proceed with
    the configuration.


NOTE ON CMAKE: CMake is a paltform independent makefile generator.
Type "cmake" (without arguments) to see a list of options.

NOTE ON REPEATED INSTALLS: CMake maintains a file named
CMakeCache.txt in "configuration folder" (where cmake is run)
which records all configuration variables. 
The cached values are used on subsequent runs of cmake on the same 
configuration. 
If the environment has changed (for example, boost or GMP was just installed),
you must manually delete the file CMakeCache.txt to allow cmake pick up these 
changes.

-------------------------------------------------------------------------------
