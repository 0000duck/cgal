INSTALLATION for the Specification and Manual Writing Tools
             for C++ Reference Manuals
===========================================================
24.08.1999   Zurich   Lutz Kettner


Installation of the Supporting Tools:
=====================================
(see ../INSTALLATION for the manual and TeX style files)


(1)  System Requirements:

     *  C++ Compiler (Gnu g++ 2.8.1, 2.95.1, Gnu egcs 1.1.2)
     *  C Compiler (Gnu gcc 2.6.3 or the usual system cc compiler)
     *  flex and bison
     *  perl 5
     *  Unix environment with tools like grep, sed, ...


(2)  The scripts cc_patch_anchor_filter, cc_patch_anchor_pages, 
     cc_remove_unwanted_links, and cc_patch_anchor_toc_index are Perl 
     scripts. The first line in these scripts might need adaption to 
     where the Perl interpreter is located. These changes need to be done 
     before installing these scripts.


(3)  Configuring the installation and the use of the tools:

     The installation can be configured in two ways: (A) either by setting
     appropriate environment variables, or (B) by setting these variables
     explicitly in the Makefile and the shell scripts provided. Version (A)
     is more convinient in the case of future updates.

     (A)  The configuration option (A) allows to configure the installation
	  and the use of the tools with a few environment variables without
	  editing further files. The installation expects the following
	  environment variables to be set:

	  - LATEX_CONV_CONFIG
	      The path to the configuration files of the LaTeX converter.
	      The installation copies the config files of the converter
	      into this directory and compiles this path into the 
	      cc_extract_html program as the default for the config path.

	  - LATEX_CONV_BIN
	      Path where the executables are copied during the installation.

	  - CXX, CXXFLAGS, CC, CPPFLAGS, LDFLAGS
              The usual variables for the C++ compiler, its options, the
              C compiler, the C preprocessor options (used for C and C++),
              and the linker options (used for C and C++) respectively.
              Tested compilers are: Gnu g++ 2.8.1 and SGI CC 7.2.

	  The tools expect the following environment variables to be set:

	  - LATEX_CONV_CONFIG
	      The same variable is used in the cc_manual_to_html script.


	  - LATEX_CONV_HEADER
              The header files within the \ccInclude macro can be linked
              to the original header files if the -header option is given
              to the cc_extract_html program. LATEX_CONV_HEADER is used as
              default path for the header files. If it is not set, the 
              default setting is empty and include files are not linked.

          - CC
              The C compiler. E.g. Gnu gcc 2.6.3 or the usual system cc.

	  - LATEX_CONV_DATE
	  - LATEX_CONV_AUTHOR
	  - LATEX_CONV_TITLE
	  - LATEX_CONV_RELEASE
	      Default parameters used in calling the cc_extract_html program
              to present date, author, title, and manual release number in
              the manual header and footer information. They are not 
              necessarily supposed to be set in the environment and
              reasonable defaults are prepared, see cc_manual_to_html.

          An example setting for the Gnu g++ and the C-shell could look like
          the following example. Note that the installation on different
          platforms can be supported easily with LATEX_CONV_BIN.

	  setenv LATEX_CONV_CONFIG  /home/CGAL/Tools/latex_converter_config
	  setenv LATEX_CONV_BIN     /usr/local/bin
	  setenv LATEX_CONV_HEADER  /home/CGAL/include
	  setenv CXX                g++
	  setenv CXXFLAGS
	  setenv CC                 gcc
	  setenv CPPFLAGS           -g
	  setenv LDFLAGS

	  The following environment variable is optional: 

	  - LATEX_CONV_INPUTS
	      This is the analog of the TEXINPUTS environment variable for
              the cc_extract_html program.  It should contain a colon-separated
              list of directories where the input files can be found.  If
              this is not set, the default is that files are looked for in
              the current directory.  If this is set, then directories are 
              searched in the order provided in this variable (so "." should
              be included in the list if some input files are in the current
              directory).

     (B)  The configuration option (B) expects that in the following
          files the installation section will be edited according to the
          comments in these files. The description of the environment
          variables in section (A) applies here as well. The files to
          edit are:

          - Makefile
          - cc_manual_to_html
          - cc_check


(4)  Compilation:

     Type 'gmake' to compile all programs. In principle, no warnings
     should show up besides possible warnings about unreachable 
     statements from flex sources. However, other compilers or STL's
     might produce more warnings. In addition, the 16 shift/reduce 
     conflicts in extract_syntax.y can be ignored.


(5)  Installation:

     Type 'gmake install' to move the programs and to copy the shell 
     scripts to $LATEX_CONV_BIN and to copy all the configuration files
     to $LATEX_CONV_CONFIG. Note that the Perl scripts from the 
     `../scripts/' directory are not installed by this. If the 
     $LATEX_CONV_CONFIG directory exists already, the installation
     tries to remove the old files therein. The installation process
     will issue some error messages about that a directory cannot
     be removed or that a mkdir failed. These error messages can 
     be ignored.


(6)  Cleanup:

     Type 'gmake clean' to remove all temporary files (e.g. necessary
     before compiling for another platform). Type 'gmake cleanall' to
     remove also the compiled programs and possible template databases
     of the C++ compiler.


(7)  Test Suite:

     A small test suite is provided. It assumes the new LaTeX style files
     to be installed, see ../INSTALLATION for details. Move in the `test/'
     directory and type `./test_suite'. This test should finish silently, 
     otherwise something is wrong (commands not properly installed, 
     configuration files not accessable, ..., or I forgot to update the
     reference files ;-).


(8)  Demo Example for the -extended Option of the Converter:

     Another test is provided for the new cc_manual_to_html capabilities
     to convert a manual using multiple directories. This is the example
     mentioned at the end of the manual. It is located in the subdirectory
     `test_html/' and started with the script `./convert', which is located
     in this subdirctory. This test should finish silently with the 
     exception of several warnings that a `rule cannot be matched'. The
     result could be viewed with a Web-browser starting with the file
     `test_html/html/contents.html'.

EOF
