#!/bin/sh
OUTPUTFILE=error.txt

one_run()
{
    if "./$1" < ${datafile} >output
    then
	if [ -r $2 ]
	then
	    if cmp -s output $2
	    then
		succes=ja
	    else
		succes=nee
		echo "diff of output and $2" >> diffs
		diff output $2 >> diffs
	    fi
	else
	    echo "WARNING: No file $2" >>  $OUTPUTFILE
	    succes=ja
	fi
    else
	succes=nee
    fi
    if [ ${succes} = ja ]
    then
	echo  "$1 < ${datafile} succesful">> $OUTPUTFILE
    else
	echo "ERROR: $1 < ${datafile} did not run well" >> $OUTPUTFILE
    fi
}


make_and_execute_one()
{
    if make R="$2" N="$3" EXTRAFLAGS="-DTestRepCode=$2 -DTestNumCode=$3"  $1 # 2>/dev/null
    then
	echo "compilation of $1 with R=$2 and N=$3 succeeded" >> $OUTPUTFILE
	for datafile in ${datafiles}
	do
	    if [ -r ${datafile} ]
	    then
		goodresult="$4/`basename ${datafile}`"
		one_run $1 $goodresult
	    fi
	done
    else
	echo "ERROR: compilation of $1 with R=$2 and N=$3 failed" >> $OUTPUTFILE
    fi
    rm -f $1
    make clean
}

make_and_execute()
{
    make_and_execute_one ist  $1 $2 IstAnswers
    make_and_execute_one unt  $1 $2 UntAnswers
    make_and_execute_one dft  $1 $2 DftAnswers
#    make_and_execute_one simpletest IstAnswers
}

#----------------------------------------------------------------#
#                clear the output file                           #
#----------------------------------------------------------------#
rm -f $OUTPUTFILE
touch $OUTPUTFILE

rm -f diffs
touch diffs

datafiles=`ls Testsets/t* Testsets/dg* 2>/dev/null`
if [  "${datafiles}" ]
then
    make_and_execute 1 4;
fi

#datafiles=`ls Testsets/t*  2>/dev/null`
if [  "${datafiles}" ]
then
    make_and_execute 2 5;
fi

make clobber




