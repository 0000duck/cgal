/**************************************************************************
 
  cc_anchor_header
  =============================================================
  Project   : Tools for the CC manual writing task around cc_manual.sty.
  Function  : Annotate in the machine generated HTML documentation from
              cc_extract_html tool all meaningful keywords with the 
              appropriate hyperlinks.
                 This file is the header of a flex program doing this. 
              The flex rules are collected in a file called cc_anchor_rules
              for each run of cc_extract_html tool. The cc_manual_to_html
              script concatenates the cc_anchor_header, the cc_anchor_rules,
              and the cc_anchor_footer to a complete flex program, compiles
              it and applies it to the HTML files.
  System    : flex, cc (gcc)
  Author    : (c) 1997 Lutz Kettner
  Revision  : $Revision$
  Date      : $Date$
 
**************************************************************************/

%{
#include <stdlib.h>
#include <stdio.h>

/* Hack, to get rid of the yywrap. */
#define YY_SKIP_YYWRAP 1
#define yywrap() 1

/* Is used to count nesting levels during PARAMMODE */
int nesting;

%}

/* One '<' has been detected that starts a template parameter list.  */
/* Scan further until matching '>' has been found.                   */
/* Count nesting parantheses and so forth.                           */
%x PARAMMODE

/* Avoid substitutions while within an HTML Tag. */
%x TAGMODE

/* Avoid substitutions while within an HTML Anchor. */
%x ANCHORMODE

letter          [a-zA-Z]
noletter        [^a-zA-Z]
digit           [0-9]
CCletter        [a-zA-Z_]
noCCchar        [^a-zA-Z0-9_]
word            {letter}+
CCidfier        ({CCletter}({CCletter}|{digit})*)
ws              [ \t\n\r]*

%%

<PARAMMODE>"&gt;"      {
			   --nesting;
			   if ( ! nesting) {
			       BEGIN( INITIAL);
			       ECHO;
			       fputs( "</A>", stdout);
			   } else
			       yymore();
		       }
<PARAMMODE>"&lt;"      {   ++nesting; yymore(); }
<PARAMMODE>[<(\{\[]    {   ++nesting; yymore(); }
<PARAMMODE>[>)\}\]]    {   --nesting; 
		           if ( nesting < 1) {
			       fputs( "warning: mismatching <>(){}[] in template parameters : `", stderr);
			       fputs( yytext, stderr);
			       fputs( "'\n", stderr);
			       BEGIN( INITIAL);
			       ECHO;
			       fputs( "</A>", stdout);
                           } else
			       yymore();
                       }
<PARAMMODE>.           {   yymore(); }

"<HEAD>"(.|[\n])*"</HEAD>" { ECHO; /* Avoid substitutions in the head */ }

"<"[aA][^0-9a-zA-Z]        { BEGIN( ANCHORMODE); ECHO;}
<ANCHORMODE>"</"[aA]">"    { BEGIN( INITIAL); ECHO;}
<ANCHORMODE>.              { ECHO;}

"<"                        { BEGIN( TAGMODE); ECHO;}
<TAGMODE>">"               { BEGIN( INITIAL); ECHO;}
<TAGMODE>.                 { ECHO;}


"</TABLE><!3>"[ \t\n]*"<!3><TABLE"[^>]*">"    { ; /* smooth adjacent tables */}
"</TABLE><!2>"[ \t\n]*"<!2><TABLE"[^>]*">"    { ; /* smooth adjacent tables */}
"<!scramble>"                                 { ; /* better readability     */}
