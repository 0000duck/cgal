% ___________________________________________________________________________
% |#########################################################################|
% |                                                                         |
% | Latex Converter Style File: latex_converter.sty                         |
% | ------------------------------------------------------------------      |
% | Macros needed to make the converter run.                                |
% |                                                                         |
% | 24.07.1998   Lutz Kettner   kettner@acm.org                             |
% | Zurich, Switzerland                                                     |
% | $Revision$                                                       |
% | $Date$                                            |
% |_________________________________________________________________________|
% |#########################################################################|
% |                                                                         |
% | Table of Contents:                                                      |
% |                                                                         |
% |   o   Configuration
% |   o   End of Conversion Activities
% |   o   Inclusion of Converter Style Files
% |   o   (La)TeX Macro Expansion, Environments and Scopes
% |   o   Boolean Values and Control Structures
% |   o   Stack of Macro Bodies
% |   o   HTML Output and Conversion Macros
% |   o   Separation of TeX, HTML and ASCII Parts
% |   o   RCSdef, RCSdefDate, and RCSdefArg
% |                                                                         |
% |#########################################################################|

% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   Configuration
% |
% ###########################################################################

\newcommand{\lciHtmlSuffix}{.html}
\newcommand{\lciChapterPrefix}{Chapter_}
\newcommand{\lciAnchorFilename}{cc_anchor_rules}
\newcommand{\lciContentsFilename}{contents.html}
\newcommand{\lciBibFilename}{biblio.html}
\newcommand{\lciIndexFilename}{cc_index_body}

\newcommand{\lciAnchorHeader}{cc_anchor_header}
\newcommand{\lciAnchorFooter}{cc_anchor_footer}
\newcommand{\lciManualHeader}{cc_manual_header}
\newcommand{\lciManualFooter}{cc_manual_footer}
\newcommand{\lciTocHeader}{cc_toc_header}
\newcommand{\lciTocFooter}{cc_toc_footer}
\newcommand{\lciBiblioHeader}{cc_biblio_header}
\newcommand{\lciBiblioFooter}{cc_biblio_footer}
\newcommand{\lciIndexHeader}{cc_index_header}
\newcommand{\lciIndexFooter}{cc_index_footer}

\gdef{\lciIfHtmlClassToc}{\lcTrue}
\gdef{\lciIfHtmlClassFile}{\lcTrue}
\gdef{\lciIfHtmlClassNotInline}{\lcTrue} %% used by ccHtmlClassFile
\gdef{\lciIfHtmlClassLinks}{\lcTrue}
\gdef{\lciIfHtmlClassIndex}{\lcTrue}
\gdef{\lciIfHtmlLinks}{\lcTrue}
\gdef{\lciIfHtmlIndex}{\lcTrue}

\newcommand{\ccHtmlNoClassToc}{\gdef{\lciIfHtmlClassToc}{\lcFalse}}
\newcommand{\ccHtmlNoClassFile}{\gdef{\lciIfHtmlClassFile}{\lcFalse}}
\newcommand{\ccHtmlNoClassLinks}{\gdef{\lciIfHtmlClassLinks}{\lcFalse}}
\newcommand{\ccHtmlNoClassIndex}{\gdef{\lciIfHtmlClassIndex}{\lcFalse}}
\newcommand{\ccHtmlNoLinks}{\gdef{\lciIfHtmlLinks}{\lcFalse}}
\newcommand{\ccHtmlNoIndex}{\gdef{\lciIfHtmlIndex}{\lcFalse}}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   End of Conversion Activities
% |
% ###########################################################################

%% Will be called automatically at the end of the conversion process
\gdef\lciEndOfConversion{}
\newcommand{\lciAddToGlobalDef}[2]{\gdef#C1{#X1#2}}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   Inclusion of Converter Style Files
% |
% ###########################################################################

% The following four lines at the beginning of other converter style
% files provide them with the basic macro definitions to make the 
% LaTeX converter work.

%% % Load latex_converter.sty that provides the basic converter capabilities.
%% \newcommand{\lcStyleFile}[1]{\lciInputStyleFile{\lciConfigPath}{#XC1}}
%% \newcommand{\lciInputStyleFile}[2]{\input{#XC1#C2.sty}}
%% \lcStyleFile{latex_converter}

% The \lcStyleFile macro will be overloaded here with a more sophisticated
% version which keeps track of already loaded styles and which skips 
% loading for style files <sty> where a macro with the name 
% \lciSkipStyle_<sty> is defined. Note that \newcommand{} or gdef{} must
% be used to define these names, since they contain characters not allowed
% in usual TeX macros. (I.e. \gdef\... or \def\... would not work.)

\gdef{\lciLoadedStyle_latex_converter}{}

\newcommand{\lcStyleFile}[1]{%
    \lciIfDefined{\lciLoadedStyle_#XC1}{}{%
        \lciIfDefined{\lciSkipStyle_#XC1}{}{%
            \lciInputStyleFile{\lciConfigPath}{#XC1}%
            \gdef{\lciLoadedStyle_#XC1}{}}}}
\newcommand{\lciInputStyleFile}[2]{\input{#XC1#C2.sty}}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   (La)TeX Macro Expansion, Environments and Scopes
% |
% ###########################################################################

\newcommand{\lciSkipOneParameter}[1]{}
\newcommand{\lciSkipOneParameter@om}{}
\newcommand{\lciSkipOneParameter@oom}{}
\newcommand{\lciSkipTwoParameter}[2]{}
\newcommand{\lciSkipTwoParameter@omm}{}
\newcommand{\lciSkipTwoParameter@oomm}{}

\newcommand{\renewcommand}{\newcommand}
\newcommand{\providecommand}[1]{\lciIfDefined{#C1}{\lciSkipOneParameter}%
    {\newcommand{#C1}}}

\newcommand{\newenvironment}[3]{%
    \newcommand{\begin@#C1}{#2}%
    \newcommand{\end#C1}{#3}%
}
\newcommand{\newenvironment@momm}{%
    \newcommand{\begin@#C1}[#2]{#3}%
    \newcommand{\end#C1}{#4}%
}

%% Note! Only partial functionality of original TeX \edef !
\newcommand{\edef}[2]{\newcommand{#1}{#X2}}

\newcommand{\begin}[1]{\lciBegin\begin@#C1}
\newcommand{\end}[1]{\end#C1\lciEnd}

\newcommand{\begingroup}{\lciBegin}
\newcommand{\endgroup}{\lciEnd}

\newcommand{\lciBegin}{\lciBeginGroup\lciBeginScope}
\newcommand{\lciEnd}{\lciEndScope\lciEndGroup}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   Boolean Values and Control Structures
% |
% ###########################################################################

%% Syntax:  \lciIf{bool}[Auto-choice optional]{then path}{else path}
%% Possible choices for bool
\newcommand{\lcFalse}[2]{#2}
\newcommand{\lcTrue}[2]{#1}
\newcommand{\lcAuto}[2]{}

\newcommand{\lcFalse@omm}{#3}
\newcommand{\lcTrue@omm}{#2}
\newcommand{\lcAuto@omm}{#1}

\newcommand{\lciIf}[1]{#X1}

\newcommand{\lciIfEqualExpanded}[2]{\lciIfEqual{#X1}{#X2}}

%% Args: countername, start, end, body
\newcommand{\lciFor}[4]{%
    \newcommand{#1}{#X2}%
    \lciWhileLessOrEqual{#1}{#X3}{#4}%
}

%% Args: countername, end, body
\newcommand{\lciWhileLessOrEqual}[3]{%
    \lciIfLessOrEqual{#X1}{#2}
        {#3\lciAddTo{#1}{1}\lciWhileLessOrEqual{#1}{#2}{#3}}{}%
}

% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   Stack of Macro Bodies
% |
% ###########################################################################

%% A stack stores a nested sequence of macro bodies enclosed in parantheses
%% \newcommand{\stack}{{body1}{{body2}{{body3}{}}}}
%% body1 is on top of the stack.
%% The empty stack: \newcommand{\stack}{}
%% The empty global stack: \gdef\stack{}
%% Note that the implementation of #X does not expand the stack body.

%% Args: stack, macro of which the body gets pushed on the stack
\newcommand{\lciPushStack}[2]{\newcommand{#1}{{#X2}{#X1}}}
\newcommand{\lciPushGlobalStack}[2]{\gdef#C1{{#X2}{#X1}}}

%% Args: stack, macro which gets assigned the body from top of stack
\newcommand{\lciTopStack}[2]{\lciLocalTopStack {#2}#X1}
\newcommand{\lciLocalTopStack}[3]{\newcommand{#1}{#2}}

\newcommand{\lciTopGlobalStack}[2]{\lciLocalTopGlobalStack {#2}#X1}
\newcommand{\lciLocalTopGlobalStack}[3]{\gdef#C1{#2}}

%% Args: stack
\newcommand{\lciPopStack}[1]{\lciLocalPopStack {#1}#X1}
\newcommand{\lciLocalPopStack}[3]{\newcommand{#1}{#3}}

\newcommand{\lciPopGlobalStack}[1]{\lciLocalPopGlobalStack {#1}#X1}
\newcommand{\lciLocalPopGlobalStack}[3]{\gdef#C1{#3}}

%% Args: a macro name
\newcommand{\lciIfEmpty}[1]{\lciIfEqual{}{#X1}}

%% Args: stack
\newcommand{\lciPrintStack}[1]{\{\lciIfEmpty{#1}{}{\lciLocalPrintStack #X1}\}}
\newcommand{\lciLocalPrintStack}[2]{\{#1\}\{\lciIfEmpty{#2}{}
    {\lciLocalPrintStack #2}\}}

% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   HTML Output and Conversion Macros
% |
% ###########################################################################

\newcommand{\lcAnchor}[2]{\lcRawHtml{<A HREF="#C1">}#2\lcRawHtml{</A>}}
\newcommand{\lcRawAscii}[1]{}
\newcommand{\lcRawHtml}{\lciRawOutput}

% old names for compatibility
\newcommand{\ccAnchor}{\lcAnchor}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   Separation of TeX, HTML and ASCII Parts
% |
% ###########################################################################

\newcommand{\lcTexHtml}[1]{\lcRawHtml}
\newcommand{\lcTex}[1]{}
\newcommand{\lcHtml}[1]{#1}
\newcommand{\lcAscii}[1]{}

\newenvironment{lcTexOnly}{%
    \lciParseUntilEndToken{\lciSkipOneParameter}{lcTexOnly}}{}

\newcommand{\lciLocalHtmlOnly}[1]{\lciRawOutputN{#L1}#1}
\newenvironment{lcHtmlOnly}{%
    \lciParseUntilEndToken{\lciLocalHtmlOnly}{lcHtmlOnly}}{}

\newenvironment{lcHtmlBlock}{}{}

% old names for compatibility
\newcommand{\ccTexHtml}{\lcTexHtml}
\newenvironment{ccTexOnly}{%
    \lciParseUntilEndToken{\lciSkipOneParameter}{ccTexOnly}}{}
\newenvironment{ccHtmlOnly}{%
    \lciParseUntilEndToken{\lciLocalHtmlOnly}{ccHtmlOnly}}{}


% ___________________________________________________________________________
% ###########################################################################
% |
% |   o   RCSdef, RCSdefDate, and RCSdefArg
% |
% ###########################################################################

\newcommand{\RCSdef}[2]{%
    \newcommand{\lciRCSdefName}{#1}%
    \lciParseUntilDelimiter{\lciRCSdefX}$#2$$}
\newcommand{\lciRCSdefX}[1]{\lciParseUntilDelimiter{\lciRCSdefXX}$#1}
\newcommand{\lciRCSdefXX}[1]{%
    \lciIfEmpty{#1}{%
        \lciError{Empty RCS entry}%
        \lciRCSnewcommand{\lciRCSdefName}{<unknown RCS entry>}%
    }{%
        \lciRCSnewcommand{\lciRCSdefName}{#C1}%
        \lciSkipTwoParameter %% skip the two remaining $'s
    }}
\newcommand{\lciRCSnewcommand}[2]{\newcommand{#X1}{#2}}



\newcommand{\RCSdefDate}[2]{%
    \newcommand{\lciRCSdefdateName}{#1}%
    \lciParseUntilDelimiter{\lciRCSdefdateX}$#2 $$}
\newcommand{\lciRCSdefdateX}[1]{\lciParseUntilDelimiter{\lciRCSdefdateXX}$#1}
\newcommand{\lciRCSdefdateXX}[1]{%
    \lciIfEmpty{#1}{%
        \lciError{Empty RCS Date entry}%
        \lciRCSnewcommand{\lciRCSdefdateName}{<unknown RCS date entry>}%
    }{%
        \lciParseUntilDelimiter{\lciRCSdefdateY} #1  }}
\newcommand{\lciRCSdefdateY}[1]{\lciParseUntilDelimiter{\lciRCSdefdateYY} #1}
\newcommand{\lciRCSdefdateYY}[1]{%
    \lciIfEmpty{#1}{%
        \lciRCSnewcommand{\lciRCSdefdateName}{\lcRawHtml{Date: --/--/--}}%
    }{%
        \lciRCSnewcommand{\lciRCSdefdateName}{Date: #1}%
        \lciParseUntilDelimiter{\lciRCSdefdateZ} }}
\newcommand{\lciRCSdefdateZ}[1]{%
        \lciSkipTwoParameter %% skip spaces and the two remaining $'s
}


\newcommand{\RCSdefArg}[2]{%
    \lciUndef{#C1}%
    \newcommand{\lciRCSdefArgName}{#C1}%
    \lciParseUntilDelimiter{\lciRCSdefArgX} #X2 $}
\newcommand{\lciRCSdefArgX}[1]{\lciParseUntilDelimiter{\lciRCSdefArgXX}$}
\newcommand{\lciRCSdefArgXX}[1]{%
    \lciIfEmpty{#1}{%
        \lciMessage{
Warning: Empty RCS argument}%
        \lciRCSnewcommand{\lciRCSdefArgName}{}%
    }{%
        \lciRCSnewcommand{\lciRCSdefArgName}{#C1}}}



\RCSdef{\lcRevision}{$Revision$}
\RCSdefDate{\lcDate}{$Date$}

\newcommand{\ccRevision}{\lcRevision}
\newcommand{\ccDate}{\lcDate}
\RCSdefArg{\lcRevisionArg}{\lcRevision}
\RCSdefArg{\lcDateArg}{\lcDate}

\newcommand{\lciPrintVersion}[2]{\lciMessage
    { R#X1 #X2}%
}
\lciPrintVersion{\lcRevisionArg}{\lcDateArg}


% ___________________________________________________________________________
% ###########################################################################
% | EOF
% ###########################################################################
