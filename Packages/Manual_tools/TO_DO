Manual_tools/TO_DO
==================
 
-- template template parameters in functions not working?
   \ccFunction{template <template <typename> class Stencil>
   void PQQ(Poly& p, Stencil<Poly> rule, int d);}
   {comments...}  Reported by Andy.

-- Provide manuals online.

-- page numbering known to acroread does not match the page numbers of the
   document. Reason is that the table of contents gets its own numbering
   before the rest, which shifts the page numbers.

-- Math formulas in HTML embedded, search for AsciiMathML

-- Curved kernel: CircularKernel::ConstructIntersections_2: operator()
   in PDF but not in HTML

-- <title>\cgal</title>: have general flex rule to eliminate <...>
   markups in titles, see \cgal in STL Extension chapter.

-- Summary listing of member functions for current page
   use auxiliary file per ref page to do this automatically

-- Extend summary isting of member functions to include base classes
   (think of derivation from template args -> look at concept aux page)

-- In the HTML manual, concepts and classes/functions are not
   visually distinguishable : same font (italic) and same color.
   In the PS/PDF, they are : italic font for classes/functions,
   and normal font for concepts.
   Would it be possible to change the HTML version so that they
   are distinguishable ?  Either using an italic font for concepts
   like in the PS/PDF, or using a different color ?

-- Add warnings/errors for missing GIF's, and for [ref: entries indicating
   missing ref's labels'

-- Check which HTML standard we use. Validate pages officially.

-- Make cross links from \label \ref pairs use the numbers, not the arrow icon.

-- Gif figures that don't have quotes like in src="..." are not copied.
   Either fix it or give error message.

-- Cross-linking of ASCII and PRETTY enums in cgal_manual broken.

-- indexing nested types: \ccNestedType{} not indexed?
   For example : Triangulation_2::Line_face_circulator.
   It seems that \ccTypedef names are already indexed???

-- operator simplification not working, see operator< in Point_2

-- Removal of same type not working, see Nef_S2 Sphere_segment
   (in Sphere_point, might be a scope question that the surrounding class
    must be given as well).

-- Bug: why does latex_to_html.css show up in /usr/tmp ?

-- Problem: The .gif figures are needed for the Modifier section. Since
    the modifier section does reside in a different directory, but
    does not create its own file, for example, for a chapter, will the
    latex_to_html converter not find the gif file automatically from the
    Modifier directory. The latex_to_html converter searches the file in
    the Miscellany directory instead, where we just keep a copy of those
    gif files for now, until maybe the converter can be improved.

-- Once \includonly works, we might need a script to gray out unused TOC
   entries (using a different CSS class for the link)

-- detect and layout long template parameter lists

-- Documentation

-- Test suite

-- Check what to do with
   Tutorial/doc_tex

-- Macro to analyse length value (1pt, 2in, ...) and store in \lciLength
   Implement \hspace and \vspace

-- Allow several chapters in one file, all chapters except the first
   have output filenames with a chapter number per file as suffix

-- OS License GPL for Manual tools: ask ETH/MPI for allowance

-- Make User manual to print separately

-- Each Chapter in its own PS file
   try \includeonly and check of TOC gets reduced also

-- Add new commands such as
   \ccSummaryMethod{bool is_valid();}{short summary comment}
   That creates a summary entry and a "more" link to the full
   documentation (on the same page, or also applicable to base classes).

-- remove cc_check and cc_extract from distribution, which implies
    - removing them from the src directory
    - removing cc_extract.tex cc_extract.ps.gz from doc directory
    - changing cc_manual.tex to remove references to this (in particular
      the picture that shows how the tools interact)
    - ???

-- some problem with stepcounter

-- ccRefIdfierPage should add the global scope if it's not there.
   This is easier done when access to all .tex files is available as adding
   the scope can be the default action?

-- no linking except inside \ccc command ???

-- no linking of file to itself ???

-- add a command to turn off the link created by \input in HTML

-- make doc convertable to HTML

-- make a list of examples (generated from ccIncludeExample command)
    -- better if all code is included using this command

-- make ccIncludeExample change to a smaller font?

-- syntax highlighting for the HTML examples

-- add a box around the examples and/or use a different background color ???

-- What about introducing template concepts ?
   Like "InputIterator<T>" for saying "InputIterator with value type T".
   This would be helpful for documenting requirements on related types.
   [ I have no clue how hard it would be to modify the manual tools to support
   this. ]

   ( NB: this is somehow inspired from a proposal to introduce concepts
     in the C++ language which you can find here :
     http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2005/n1758.pdf
     but I only care about simplifying/improving the documentation. )


printed cgal manual
-------------------
-- Check header/footer of printed manuals

-- Change page numbers of printed manual to <Part-Num>-<Chapter-Num> 
   + page per chapter

-- get rid of the underfull \hbox messages for the eps_tabs images
   (annoys finding the real problems in the log.

latex_to_html
-------------
-- Numbered equations

-- Document new filename macros: \lciInputPath, \lciOutputFilename, 
   ...Rootname, ...FilePath, ...Uppath

-- Embedd latex2gif scripts into converter, apply it to figures (check
   if a *.gif or *.png is provided before converting automatically)
   and for complicated formulas etc.

-- Control uses of current filename and main filename to clean those names up

-- Revise the file output handling: merge handleChapter and handleClassFile,
   make it generic and apply it to all sectioning commands depending on
   some level counter. Consider anchor_stream to put on stack as well
   or open and close it for each push and pop.

-- Make also one HTML page possible for a hole LaTeX document.
   For this, embedd TOC, index and library, in main file.

-- Maybe, an *.aux file (named *.hax for latex_to_html), would be good
   to transport TOC entries and other stuff in two-pass translations.

-- If we get a *.hax file, we can also realize \includeonly, where all
   counter values stay preserved.

-- Improve \ifthenelse package with parsing of \and ...

-- Check if more stuff in the auxfile should be used, 
   should also the aux files of \include'd files be considered

-- Make index only if \makeindex is defined. Adapt header and footers.

-- Make TOC only if \tableofcontents is defined.

-- Make bibliography at its appropriate place.

-- Enter TOC, Index, Biblio into TOC and Navigation only if they exist.

-- Check for completely empty navigation line (for single HTML page
   conversions)

-- Convert my own LaTeX papers as test cases for single HTML page.

-- Check what happens if the main latex input file is in a subdir.

-- More generic #X expand mechanism for \edef, check what \protect does
   (i.e., where to stop the expansions)

-- What does cc_remove_unwanted_links? (strips all links in an area
   delimited by keyword lines in the HTML files). Is it used anywhere
   or documented? Could it be replaced by the new \lcNoLinkBegin/End?

-- Move "Next" navigation creation to style file for parametrization.

-- Consider "Prev" navigation lines.

-- hyperlink rules for \ccInclude to link example programs

-- Go through LaTeX book appendix once more to check new macros not 
   yet supported

-- Add counter to theorem environment

-- expandafter macro

-- Enable part title when full hierarchical file output is supported

-- Check and improve that cross linking to reference pages point to 
   the top of the page (navigation header), not the section title
   (if the reference pages are in there own file of course).

-- Remove the explicit \ccRefPageBegin/End's from my manual pages
   since they are automatically called in the refPage environment

