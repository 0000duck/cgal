#!/bin/sh
ERRORFILE=error.txt

use_purify=0

make_and_execute()
{
    if [ -r ii_files/${base}.ti.$1 ]
    then
	mv ii_files/${base}.ti.$1 ti_files/${base}.ti
    fi
    if [ -r ti_files/${base}.ti.$1 ]
    then
	mv ti_files/${base}.ti.$1 ti_files/${base}.ti
    fi
    echo "Compiling ${base} ... "
    if make EXTRA_FLAGS="-DTESTR=$1" ${base}
    then
	echo "   success: compiling ${file} with TESTR=$1" >> $ERRORFILE
	if [ -r ii_files/${base}.ii ]
	then
	    mv ii_files/${base}.ii ii_files/${base}.ii.$1
	fi
	if [ -r ti_files/${base}.ti ]
	then
	    mv ti_files/${base}.ti ti_files/${base}.ti.$1
	fi
	if [ ${use_purify} -eq 1 ]
	then
	    purify -log-file="%v.$1.%p.plog" ${base}
	    mv ${base}.pure ${base}
	fi
    else
	echo "   ERROR:  compiling ${file} with TESTR=$1" >> $ERRORFILE
    fi
    echo "Executing ${base} ... "
    echo
    if [ -f ${base} ] ; then
       if eval 2>&1 ./${base} ; then
         echo "   execution of ${base} succeeded" >> $ERRORFILE
       else
         echo "   ERROR:  execution of ${base} failed" >> $ERRORFILE
       fi
    else
       echo "   ERROR:  could not execute ${base}" >> $ERRORFILE
    fi

    make ${base}.clean
}

#----------------------------------------------------------------#
#                clear the output file                           #
#----------------------------------------------------------------#
rm -f $ERRORFILE
touch $ERRORFILE


if [ $# -ne 0 ]
then
    sourcefiles="$*"
else
    sourcefiles="*.C"
fi


for file in ${sourcefiles}
do
    base=`basename ${file} .C`
    make_and_execute 1;
    make_and_execute 2;
done

