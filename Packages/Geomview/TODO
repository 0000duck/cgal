- Remove the requirement to have a ./.geomview file with (echo "started")
  inside.  Synchronization can probably be done with select() ?
  There are other problems (sleep(1) is needed), so maybe don't touch...
- Why not use the OOGL library coming with Geomview to parse stuff ?
- The remote geomview (with rsh) facility probably doesn't work.
  But is it useful ?
- Write operator<<(Triangulation), 2D and 3D.  Partly done.
- Add a note in the doc when triangulation outputs are ready.
- Add flags to the stream that say :
  - draw vertices or not
  - draw edges or not
  - draw surfaces or not (fill or wired).
- le gv << Triangulation_2 utilise gv << Point_[23] et z=0 le cas echeant.
  Maybe by putting the stream is a state "raw".
- What to do for Circle_2 ?  Maybe there's some code somewhere, or ask the
  geomview list.

- Make a testsuite (words from Herve):
<<<<<<<<<<<<<<<<
Geomview testsuite:

It's not clear how to make it at this point...
After talking to Francois, I got the following idea:

* make sure . is in the path
* create a local script called geomview, so that upon creating the
  Geomview_stream(), the call execlp("geomview",...)  calls ./geomview instead
  of the 3D viewer
* that script will simply process gcl (geomview command language) so that it
  reports on its output exactly the objects that are given from the input
* the testsuite will simply consist of outputting the different objects into
* the geomview stream, and getting them back, and comparing.

This should allow the testsuite to be fully automatic and yet test all the
documented features of the package. How to do it remains to be cleared.
Any volunteers?

--Herve 
>>>>>>>>>>>>>>>

- Now I think that testing compilation for all kernel (and others) objects
  output may be already nice, and simple.
  Maybe we can start geomview with no single window via command line options
  of environement variables ?
