- in the doc change the name of the template parameter for the
  point container from SC to PC.
- add two different storage sites, one for the case of intersecting
  segments and one for the case of non-intersecting segments
- add boolean parameter in Segment_Voronoi_diagram_2 class that indicates
  how to treat intersecting segments
- add boolean in the hierarchy class that indicates whether to insert segments
  in the upper levels of the hierarchy or not
- create the class Triangulation_face_base_with_edges_2 and move the
  functionality there; this class should also be (or not be used)
  in the Apollonius_graph_2 package)
- change the doc so that the requirement for the face base is the
  Triangulation_face_base_2 class
- replace the vertex base class of both the Apollonius_graph_2 and
  the Segment_Voronoi_diagram_2 packages by a common base class and
  derive from that; the base class should accomodate different sites, other
  than points, and also have the capability of having a different type
  for storage and the actual site. Then derive from that.
- add the methods insert_polyline and insert_polygon that do some
  optimized insertion for polylines and polygons; add these in both
  the one-level and hierarchy classes
- fix the bug in insert_third for point
- add the check for a segment intersecting an existing point and
  a point intersecting an existing segment.

**************** OLD COMMENTS (with self-answers) ************************
- write a different class for the construction of the Voronoi vertex
  that does internal filtering
  ----> this should already have been done; look at Filtered_construction
- in the traits class add Object_2 and Assign_2 as in the case of the
  Apollonius graph
- check whether it makes sense to use the fact that FG is a perfect square in
  the computations of the PSS Voronoi vertex
- modify the traits so that Compare_xy_2 is used instead of Compare_x_2 and
  Compare_y_2; remove the Are_same_points_2 predicate; add the
  necessary predicates so that the finite and infinite edge conflict
  predicates take a boolean instead of a sign as their argument
  ----> removing the sign seems difficult; using Compare_xy_2 is not
  needed; in fact, I believe that even Compare_x_2 and Compare_y_2 are
  not needed...
