#!/bin/bash
maplewhere=`which maple`
if [ "x$maplewhere" == "x" ]; then
    maple="/Applications/Maple 9.5/Maple 9.5.app/Contents/MacOS/bin/maple"
fi
level=4 # verbosity level for the solver

function bailout()
{
    echo "$1"
    exit 1;
}

function createTestsuite()
{
    dataDir=$1
    dataFile=$2
    extension=$3
    cgalOrNot=$4
    oldFormat=$5

    # create list of all mema's in directory data/:
    cd Maple
    FILES=`find data -name '*.mema'`
    
    # process each file:
    for file in $FILES
      do
        # check that all memas contain 'is_part_of_CGAL_testsuite':
      if grep -q "is_part_of_CGAL_testsuite:= true" "$file"; then
	  echo -n ""
      else
	  if grep -q "is_part_of_CGAL_testsuite:= false" "$file"; then
	      echo -n ""
	  else
	      echo ""
	      echo "WARNING: File '$file' should either contain"
	      echo "  'is_part_of_CGAL_testsuite:= true'"
	      echo "or"
	      echo "  'is_part_of_CGAL_testsuite:= false'."
	      echo ""
	      warnUser=1
	  fi
      fi

      tmp=`basename "$file"`
      mfile=${tmp%.*}
      DATAFILES=`find ../$dataDir/ -name ${mfile}*$extension`
      doit=0
      if [ "x$DATAFILES" == "x" ]; then
	  doit=1
      fi
      for f in $DATAFILES
	do
	if [ $f -ot $file ]; then
	    doit=1
	fi
      done

      if [ $doit == 1 ]; then
	  echo "Converting '$mfile' ..."
	  "${maple}" -c "QPSOLVERTESTSUITE:=true" -c "QPSOLVEROLDFORMAT:=$oldFormat" $file \
	      || bailout "Maple failed!"
      else
	  echo "File '$mfile' is up-to-date."
      fi
    done

    # construct input file for test_suite_QP_solver:
    echo "Constructing file '${dataFile}'; this may take a while ..."
    cd ..
    if [ "x$cgalOrNot" == "xCGAL" ]; then
	TESTFILES=`grep -l 'is_part_of_CGAL_testsuite:= true' Maple/data/*.mema`
    elif [ "x$cgalOrNot" == "xall" ]; then
	TESTFILES=`grep -l 'is_part_of_CGAL_testsuite' Maple/data/*.mema`
    else
	bailout "Internal error."
    fi
    LIST=""
    MISSINGFILES=""
    for file in $TESTFILES
      do
      tmp=`basename "$file"`
      mfile=${tmp%.*}
      DATAFILES=`find $dataDir -name ${mfile}*$extension`
      for f in $DATAFILES
	do
	LIST="${LIST} $level fe $f $level pe $f $level ff $f $level pf $f"
	tmp=`basename "$f"`
	if grep -q "/$tmp/" $dataDir/CVS/Entries; then
	    echo -n "";
	else
	    MISSINGFILES="$f $MISSINGFILES"
	fi
      done
    done
    echo $LIST > ${dataFile}

    # check that all $dataDir/*.data_* files that are part of the CGAL
    # testsuite indeed exist in the CVS repository:
    if [ "x$MISSINGFILES" != "x" ]; then
	if [ "x$1" == "xCGAL" ]; then
	    echo ""
	    echo "WARNING: Some files in $dataDir/*.data_* that are part of the CGAL"
	    echo "testsuite do not exist in the repository. Please check them in."
	    echo "Here is the list of these files:"
	    echo ""
	    echo $MISSINGFILES
	    echo ""
	    warnUser=1
	fi
    fi
}

# check arguments
if [ "x$1" == "xCGAL" ]; then
    echo "Generating CGAL testsuite."
elif [ "x$1" == "xall" ]; then
    echo "Generating all of the internal testsuite."
else
    echo "Usage: $0 CGAL|all [verbosity]"
    echo ""
    echo "$0 all:  creates the internal testsuite consisting of all tests"
    echo "$0 CGAL: creates the CGAL testsuite (a subset of all tests)"
    echo ""
    echo "The optional parameter verbosity (an integer in {0,1,2,3,4} with"
    echo "4 the default) sets the verbosity level in the generated output log."
    echo ""
    echo "This program calls Maple to convert the mema-files in Maple/data"
    echo "to input files for the program test_suite_QP_solver.  In addition,"
    echo "the program writes the file test_suite_QP_solver.cin so that"
    echo "all/some of the tests are run during the CGAL testsuite: If a"
    echo "mema-file constains the string 'is_part_of_CGAL_testsuite:= true'"
    echo "the file is part of the CGAL testsuite; otherwise it is only"
    echo "part of the internal testsuite."
    echo ""
    echo "Warning: Be aware that all (data_*-) files that go into the CGAL"
    echo "testsuite should be checked into the repository (because Maple"
    echo "may not be present on the client platform). This script will"
    echo "check this and list all files that need to be commited."
    exit 1;
fi

# set verbosity:
if [ "x$2" != "x" ]; then
    level=$2
    echo "Setting verbosity to $level."
fi

warnUser=0
createTestsuite "data" "test_suite_QP_solver.cin" ".data_*" $1 "true"
#createTestsuite "testsuite-data" "test_solver.cin" ".mps" $1 "false"

# finish:
echo "Done."
if [ $warnUser == 1 ]; then
    echo "There were warnings. Please check them carefully before going on."
fi
exit 0
