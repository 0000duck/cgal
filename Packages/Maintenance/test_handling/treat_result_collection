#!/usr/local/bin/perl -w -W

use Cwd;
use strict;

#$ENV{PATH}=
#'/sw/bin:/sbin:/usr/sbin:/usr/bsd:/bin:/usr/bin';



my $scriptsdir;
my $mail_prog="$scriptsdir/send_cgal_mail";
my $unpack_dir_base;
my $unpack_dir;
my $testresult_dir;
my $result_url;
my $lockfile="cgal_testannounce.lock";
my $announcements_dir="/private/CGAL/testannouncements";
#my $announcements_dir="/u/termite/0/user/spion/CGAL/testannouncements";
my $lock_cmd= "/usr/local/bin/lockfile";
my $currentdir;
 
my ($cgal_version,$tarname,@results);

$currentdir=cwd();
$testresult_dir="$currentdir/TESTRESULTS";
$scriptsdir="$currentdir";
$unpack_dir_base="$currentdir";

sub usage()
{
    print STDERR "usage: $0 URL\n";
}

sub make_unpackdir()
{
    my $dirno = 1;
    my $TMPDIR;
    $TMPDIR = "$unpack_dir_base/TMP$dirno";
    while ( -f $TMPDIR or -d $TMPDIR ) {
        ++$dirno;
        $TMPDIR = "$unpack_dir_base/TMP$dirno";
    }
    mkdir($TMPDIR,0770) or die "Cannot create temporary directory $TMPDIR\n";
    $unpack_dir = $TMPDIR;
}

sub unpack_results()
{
    chdir $unpack_dir or die;
    if  (system("$currentdir/get_cgal_html", "$result_url") != 0) {
        chdir('..');
        system('rm','-rf',$unpack_dir);
        die "Could not get URL $result_url\n";
    }
    system("gunzip", "${tarname}.gz")== 0 
	or die "Could not gunzip ${tarname}.gz\n";
    @results=grep /tar$|tar\.gz$/, `tar tf ${tarname}`;
    chomp @results;
    system("tar", "xf", ${tarname}, @results);
    system("$scriptsdir/to_zipped_format", "-v", $cgal_version, @results)==0
	or die "to_zipped_format failed. Test collection not installed.\n";
}

sub oldnotify()
{
    my $resultfile;
    open NOTICE,
    "|$mail_prog \"New test results for $cgal_version\" 'geert\@cs.uu.nl'";
    print NOTICE <<"TOTHIER";
Results for the following platforms have been installed on
http://www-sop.inria.fr/geometrica/CGAL/Members/testsuite/results.html 

TOTHIER

    for $resultfile (@results) {
        $resultfile =~ s/\.tar//;
        $resultfile =~ s/^results_//;
        print NOTICE $resultfile, "\n";
    }
    close NOTICE;
}

sub notify()
{
    my $resultfile;

# new notification method

    if (system($lock_cmd)==0) {
        my $announcement_file;
        $announcement_file = "$announcements_dir/$cgal_version";
	if ( -w $announcement_file ) {
	    open NOTICE, ">> $announcement_file";
	} else {
	    open NOTICE, "> $announcement_file";
            print NOTICE <<"TOTHIER";
Results for the following platforms have been installed on
http://www-sop.inria.fr/geometrica/CGAL/Members/testsuite/results.html 

TOTHIER
	}
        for $resultfile (@results) {
            $resultfile =~ s/\.tar//;
            $resultfile =~ s/^results_//;
            print NOTICE $resultfile, "\n";
        }
        close NOTICE;
        unlink $lockfile;
    }

}

sub install_results()
{
  if (-d $testresult_dir) {
    chdir $testresult_dir or die;    
  } else {
    mkdir $testresult_dir or die;
    chdir $testresult_dir or die;
  }
  if (-d $cgal_version) {
    chdir $cgal_version or die;    
  } else {
    mkdir $cgal_version or die;
    chdir $cgal_version or die;
  }
    my $resultfile;
    for $resultfile (@results) {
        $resultfile =~ s/\.gz//;
        system('tar','--force-local','-xf',"${unpack_dir}/${resultfile}")==0 or die;
#        unlink "${unpack_dir}/$resultfile";
    }
    chdir ".." or die;
#    system("./create_testresult_page", $cgal_version);

# clean up stuff in UNPACK_DIR

    chdir $unpack_dir or die;
#    unlink $tarname;
#    notify();

}

# check if there is one param
if ( $#ARGV != 0) {
   usage();
   die;
}

$result_url = $ARGV[0];
$tarname=`basename $result_url .gz`;
chomp $tarname;

if ( $tarname =~ m/^(CGAL-\d+\.\d+-I-\d+)-/ ) {
    $cgal_version=$1;
} else {
  if ( $tarname =~ m/^(CGAL-\d+\.\d+\.\d+-I-\d+)-/ ) {
    $cgal_version=$1;
  } else {
    if ( $tarname =~ m/^(CGAL-\d+\.\d+\.\d+)-/ ) {
        $cgal_version=$1;
  } else {
      if ( $tarname =~ m/^(CGAL-\d+\.\d+)-/ ) {
              $cgal_version=$1;
    } else {
    die "$tarname is not a valid name for a testresult collection.\n";
   }
  }
 }
}

make_unpackdir();
eval {unpack_results()} && eval{install_results()};
$@ && warn $@;
chdir($unpack_dir_base);
system('rm','-rf',$unpack_dir);
