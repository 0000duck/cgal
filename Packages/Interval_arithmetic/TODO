Concerning the code itself:

- Workaround for the x86 bug: Rajouter pour __i386 + __GNUG__ ?
  #ifndef __OPTIMIZE__
  #warning Please compile with optimization on.
  #endif
- Add preconditions on the rounding mode => CGAL_get_rounding...
  (CGAL_check_rounding, dynamically ?)
- Include a counter for success/failures of the filter ?
  Would be really nice to have (one more compile option...).
- Try to fix the assembly for Mips (is it Geert' egcs-1.0.3 problem ?)
  he's moving to egcs-1.1.1, so re-enable it for next release..
? SunPro CC 4.2 & MipsPro CC 7.2 don't want partial specializations, which
  breaks CGAL_convert_to<>(), and the overloaded predicates.  The first one is
  workable around, but not the second one...  So I decide to totally drop
  support for the CC's.
? Try to fix that warning:
  /usr/ccs/bin/as: "/var/tmp/ccBHnU0T.s", line 861: warning: 3 instructions
  required between ldfsr and next FBfcc; nops inserted
? template by float/double ? (=> must provide CGAL_FPU... for floats...)
? implement operator{<,>,<=,>=}(double) -> the current operators will be
  implemented using them, and the tests (IA) > 0 will be faster ?
  Also, this would simplify the *() and /() code.
  But be careful with exceptions... => 2 different semantics...
? shall I protect ostream operator<<() by CGAL_FPU... ?
  it seems there's a pb with Linux & Irix  (& Solaris ?) here.
  Hum... it's not MY fault, is it ?

Concerning the script:

? Clean it up, and comment it... I won't maintain it, and users might want to
  change it a little bit...
? Should I add "#include <Arithmetic_filter.h>" in the produced file ?  I
  guess not since they are not supposed to be included alone.  But it breaks
  my own great [tm] rule ?

Concerning the doc:

? document is_same().
? add a pointer to my MISC'99 paper to appear.
? when a "implementor's doc" will be available, shift the IA specific stuff in
  it ?

Concerning the test-suite:

- enable debug before re-submitting...  (or try SGI locally first)
- small benchs on a few predicates.
- test cast functions (are they dependant on rounding modes).
- test NaNs (and Infs?).  Comparisons with these should throw the exception...
- try to fix the x86 bug.  Currently, it hides the problem for the test-suite
  to work.
