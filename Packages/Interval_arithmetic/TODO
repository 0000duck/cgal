Concerning the code itself:

- make a base class with virtual functions to be redefined in the current 2
  sub-classes ?  Cleaner, doesn't need to redefine operator*=...
  can put CGAL_FPU* in it...
- add operators like (double * Interval) -> Interval.
  (double * double) -> Interval, is not overloadable, and doesn't gain much.
- shall I protect ostream operator<<() by CGAL_FPU... ?
  it seems there's a pb with Linux here.
- template by float/double ? (=> must provide CGAL_FPU... for floats...)

Concerning the test-suite:

- test cast functions.
