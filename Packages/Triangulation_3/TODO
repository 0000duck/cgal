- For Delaunay, we can use the visibility (non stochastic) walk.  How to
  choose ?  Is it worth the complexity (benchmark first) ?
- Why are the iterators friend in the ds_cell ?
- remove() : ca plante dans le prog de test de la hierarchie... a investiguer.
  refaire marcher le vieux remove pour pouvoir tester (voire garder les deux
  versions si c'est mieux).
- hierarchie : verifier que l'interface est bonne (ie tous les insert(*) sont
  interceptes...).  Documenter (+ traits).
- ameliorer user manual
- TEST SUITE
- Alignement des cellules en memoire : effets de cache + pointeurs a
  l'interieur des cellules pour le voisinage (Fred a deja fait => ask).
- La gestion memoire (interne a l'allocateur new/delete) prend pas mal de
  place (30%...).  Ca serait bien de ranger les cellules dans des tableaux,
  et ca permettrait de surcroi[tsx] aussi de se passer des listes doublements
  chainees.
  Le flag temporaire pourrait aller dans un des bits -> sizeof(cell) == 32 :)
  NB: Ca serait bien de factoriser ce probleme avec T2D !!!
- new Vertex/Cell
- Regular :
  - faire marcher la hierarchie avec.  Le probleme est qu'on delete des
    vertex, et donc la hierarchie est perdue avec ses pointeurs up/down qui
    pointent dans l'espace, du coup...
    La solution que je vois est de commencer l'implantation des sommets caches
    par une liste (in place) de vertex dans chaque cellule, qui sera
    necessaire pour le remove de toute facon.
  - vu le code, il semble que pleins de cas ne soient pas programmes, ca fait
    froid dans le dos.
- Facet_circulator : Est-ce qu'il y a besoin de stocker un TDS * ?  Stocker
  deux Vertex * plutot que deux ints, ca permet de gagner une Cell *, et
  d'etre plus rapide, non ? 

