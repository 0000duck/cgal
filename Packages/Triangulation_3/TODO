-------------- POUR LA RELEASE

- bien tester le output_stream de T_3 et le copy_tds (ordre de creation des sommets). 
- Verifier qu'il n'y a pas d'autres operations du meme style a modifier. 

-------------- POUR DES QU'ON PEUT

General
- constructeurs pour avoir Triangulation T(points.begin(), points.end()); 
- mettre des locate_2D, locate_3D, insert idem, pour eviter les tests 
  redondants sur la dimension a chaque insertion.
- trouver une interface avec T_2 qui permette d'eviter de reprogrammer 
  tout le 2d dans le 3d
- insure
- virer le init() qui n'est plus necessaire, vu qu'on a le default ctor qui
  remarche ?
- Can we have : typedef Vertex * Vertex_handle; ?
  Problem is const-correctness (see HDS and its Vertex_const_handle...).
- Deriver Triangulation de TDS ?

TEST SUITE
- faire tourner GCOV sur la test-suite, et rajouter ce qu'il faut pour
  atteindre 100%.

Doc
- (optional) sphere et grille en couleur version eps
- (revoir les anciennes corrections de JF Dufourd)
- note pour faire remarquer que Delaunay depend de l'ordre d'insertion

Exemples - demo
- en rajouter si bonnes idees...
- Monique elle veut des exemples pour les output iterators.

TDS
- virer le truc infame dans DS_Container (le magic machin).
- comprendre bug dans ancienne version de is_edge de tds, dim 2 
	(pb edge_iterator...? etonnant)

T3
- virer push_back (qui n'est deja plus documente, mais il manque des trucs
  dans STL_extensions pour pouvoir le virer completement).
- .triangle(Facet) devrait retourner un triangle oriente 
  (cf mail sur cgal-discuss-l).
- nettoyer flips/is_flippable (code duplique)
- incident_facets, incident_cells (vieille demande de Frank a
  rediscuter).  Heu, on peut avoir un peu plus de precisions ?
- is_valid devrait verifier l'enveloppe convexe
- prevoir differentes sorties : geomview (ameliorer le rendu pour
  donner un effet de perspective), vrml, viewer_3...
  cf Polyhedron_3, file I/O.

Delaunay
- le numero de vertex necessaire au remove devrait etre un requirement de
  Delaunay sur VertexBase, et le compteur, un data member de Delaunay.
- optimiser remove
- For Delaunay, we can use the visibility (non stochastic) walk.  How to
  choose ?  Is it worth the complexity (benchmark first) ?
- nearest neighbor
- natural neighbors de Raphaelle a integrer

Regular :
- faire marcher la hierarchie avec.  Le probleme est qu'on delete des
  vertex, et donc la hierarchie est perdue avec ses pointeurs up/down qui
  pointent dans l'espace, du coup...
  La solution que je vois est de commencer l'implantation des sommets caches
  par une liste (in place) de vertex dans chaque cellule, qui sera
  necessaire pour le remove de toute facon.
