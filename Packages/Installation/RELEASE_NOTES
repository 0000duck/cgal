Release notes for CGAL 3.0:
---------------------------

Version 3.0 differs from version 2.4 in the platforms that are supported, in
functionality, and in licensing. There have also been a number of bug fixes for
this release.

The license has been changed to either the LGPL (GNU Lesser General Public
License v2.1) or the QPL (Q Public License v1.0) depending on each package.
So CGAL remains free of use for you, if your usage meets the criteria of these
licenses, otherwise, a commercial license has to be purchased from Geometry
Factory (www.geometryfactory.com).


Additional supported platforms:

    * MS Visual C++, version 7.1.
    * SunPro CC versions 5.4 and 5.5 on Solaris
    * GNU g++ versions 3.2 and 3.3 on Linux, Solaris, Irix and FreeBSD.
    * MipsPRO CC 7.30 and 7.40 with both the n32 and n64 ABIs.

Platforms not supported anymore:

    * MS Visual C++, version 6.
    * GNU g++ 2.95.2 (2.95.3 is still supported)
    * Kai C++ and Borland C++, all versions


The following functionality has been added or changed:

All:
----

    * All demos have been switched from LEDA window to QT.

Kernel:
-------

    * 3 typedefs have been added to ease the choice of a robust and fast kernel:
      - Exact_predicates_inexact_constructions_kernel
      - Exact_predicates_exact_constructions_kernel
      - Exact_predicates_exact_constructions_kernel_with_sqrt
    * Progress has been made towards the complete adaptability and
      extensibility of our kernels.
    * New faster Triangle_3 intersection test routines.
    * Added a Kernel concept archetype to check that generic algorithms
      don't use more functionality than they should.
    * A few more miscellaneous functions.

Basic Library:
--------------

    * Min_sphere_of_spheres_d (new package): Algorithms to compute the smallest
      enclosing sphere of a given set of spheres in R^d.  The package provides
      an algorithm with maximal expected running time $O(2^{O(d)} n)$ and a
      fast and robust heuristic (for dimension less than 30).

    * Spatial Searching (new package): Provides exact and approximate distance
      browsing in a set of points in $d$-dimensional space using
      implementations of algorithms supporting:
        - both nearest and furthest neighbor searching
        - both exact and approximate searching
        - (approximate) range searching
        - (approximate) $k$-nearest and $k$-furthest neighbor searching
        - (approximate) incremental nearest and incremental furthest neighbor
          searching
        - query items representing points and spatial objects.
  
    * Kd-tree : this package is deprecated, its documentation is removed.
      It is replaced by the Spatial Searching package.

    * Triangulations 2D and 3D:
      - The classes Triangulation_data_structure_2 (and 3), which implements
        the data structure for 2D triangulation class, now makes use of
        CGAL::Compact_container (see Support Library section below).
      - The triangulation classes use a Rebind mecanism to provide
        the full flexibility on Vertex and Face base classes.
        This means that it is possible for the user to derive its own Face
        of Vertex base class, adding a functionality that makes use of
        types defined by the triangulation data structure like Face_handle
        or Vertex_handle.
      - New classes Triangulation_vertex_base_with_info_2 (and 3) and
	Triangulation_face_base_with_info_2 (and 3) to make easier the
        customisation of base classes in most cases.

    * Triangulations 2D:
      - Regular triangulation provides an easy access to hidden points.
      - The Triangulation_hierarchy_2, which provide an efficient location
	data structure, can now be used with any 2D triangulation class plugged
        in (including Regular triangulations).

    * Triangulations 3D:
      - slightly faster vertex removal function in Delaunay_triangulation_3.
      - Delaunay_triangulation_3 is now independent of the order of insertions
        of the points (in case of degenerate cosphericity).
      - Regular_triangulation_3 now hides vertices (and updates itself) when
        inserting a coinciding point with greater weight.  This required a new
        predicate.
      - deprecated functions: copy_triangulation(), push_back(),
        set_number_of_vertices().
      - Triangulation_3 now gives non-const access to the data structure.

    *

Support Library:
----------------

    * New container class Compact_container, which (roughly) provides the
      flexibility of std::list with the memory compactness of std::vector.

    * Geomview stream: added a function
      gv.draw_triangles(InputIterator begin, InputIterator end)
      which draws a set of triangles much more quickly than one by one.

    * Number types:
      - number types are now required to provide a function:
        std::pair<double, double>  to_interval(const NT &).
      - number types are now required to provide mixed operators with "int".
      - CLN support removed.
      - faster square() for MP_Float.

    *
