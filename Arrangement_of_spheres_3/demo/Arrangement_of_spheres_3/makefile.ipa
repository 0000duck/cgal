#############################################################################
# Makefile for building: interactive_point_insertion.app/Contents/MacOS/interactive_point_insertion
# Generated by qmake (1.07a) (Qt 3.3.8) on: Wed Sep 19 16:12:30 2007
# Project:  interactive_point_insertion.pro
# Template: app
# Command: $(QMAKE) -o makefile.ipa interactive_point_insertion.pro
#############################################################################

####### Compiler, tools and options

CC       = cc
CXX      = c++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
CXXFLAGS = -pipe -Wall -W -g  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_ACCESSIBILITY_SUPPORT -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/opt/local/share/qt3/mkspecs/default -I. -I../../include -I$(HOME)/fs/include -I/opt/local/include -I$(QTDIR)/include/qt3
LINK     = c++
LFLAGS   = -headerpad_max_install_names -prebind
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -lAOS3 -lAOS3_core -lCGALQt -lCGAL -L../../src -L../../lib_accel -L$(HOME)/fs/lib -lgmp -lmpfr -lqt-mt
AR       = ar cq
RANLIB   = ranlib -s
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= cp -f
COPY_DIR = cp -f -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = 
SOURCES = interactive_point_insertion.cpp
OBJECTS = interactive_point_insertion.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = interactive_point_insertion.pro
QMAKE_TARGET = interactive_point_insertion
DESTDIR  = interactive_point_insertion.app/Contents/MacOS/
TARGET   = interactive_point_insertion.app/Contents/MacOS/interactive_point_insertion

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: makefile.ipa interactive_point_insertion.app/Contents/MacOS/../PkgInfo interactive_point_insertion.app/Contents/MacOS/../Info.plist $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d interactive_point_insertion.app/Contents/MacOS/ || mkdir -p interactive_point_insertion.app/Contents/MacOS/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

makefile.ipa: interactive_point_insertion.pro  /opt/local/share/qt3/mkspecs/default/qmake.conf /opt/local/lib/libqt-mt.prl
	$(QMAKE) -o makefile.ipa interactive_point_insertion.pro
qmake: 
	@$(QMAKE) -o makefile.ipa interactive_point_insertion.pro

interactive_point_insertion.app/Contents/MacOS/../PkgInfo: 
	@test -d interactive_point_insertion.app/Contents/MacOS/ || mkdir -p interactive_point_insertion.app/Contents/MacOS/
	@$(DEL_FILE) interactive_point_insertion.app/Contents/MacOS/../PkgInfo
	@echo "APPL????" >interactive_point_insertion.app/Contents/MacOS/../PkgInfo
interactive_point_insertion.app/Contents/MacOS/../Info.plist: 
	@test -d interactive_point_insertion.app/Contents/MacOS/ || mkdir -p interactive_point_insertion.app/Contents/MacOS/
	@$(DEL_FILE) interactive_point_insertion.app/Contents/MacOS/../Info.plist
	@sed -e "s,@ICON@,application.icns,g" -e "s,@EXECUTABLE@,interactive_point_insertion,g" "/opt/local/share/qt3/mkspecs/default/Info.plist.app" >"interactive_point_insertion.app/Contents/MacOS/../Info.plist"
dist: 
	@mkdir -p .tmp/interactive_point_insertion && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/interactive_point_insertion/ && ( cd `dirname .tmp/interactive_point_insertion` && $(TAR) interactive_point_insertion.tar interactive_point_insertion && $(GZIP) interactive_point_insertion.tar ) && $(MOVE) `dirname .tmp/interactive_point_insertion`/interactive_point_insertion.tar.gz . && $(DEL_FILE) -r .tmp/interactive_point_insertion

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r interactive_point_insertion.app


FORCE:

####### Compile

interactive_point_insertion.o: interactive_point_insertion.cpp 

####### Install

install:  

uninstall:  

