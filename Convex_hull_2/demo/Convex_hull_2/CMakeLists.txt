# This is the CMake script for compiling a CGAL application.

project( convex_hull_2 ) 

CMAKE_MINIMUM_REQUIRED(VERSION 2.4.5)

set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS true)

find_package(CGAL QUIET COMPONENTS Qt3 )
include( ${CGAL_USE_FILE} )

find_package(Qt3-patched QUIET)
# FindQt3-patched.cmake is FindQt3.cmake patched by CGAL developers, so
# that it can be used together with FindQt4: all its variables are prefixed
# by "QT3_" instead of "QT_".

if ( CGAL_FOUND AND QT3_FOUND )

  # use the Qt MOC preprocessor on classes that derives from QObject
  include( Qt3Macros-patched )
  qt3_generate_moc( convex_hull_2.cpp convex_hull_2.moc )
  qt3_generate_moc( Qt_widget_toolbar.h Qt_widget_toolbar.moc )
  qt3_generate_moc( Qt_widget_move_list_point.h Qt_widget_move_list_point.moc )


  # The executable itself.
  add_executable  ( convex_hull_2 
    convex_hull_2.cpp convex_hull_2.moc
    Qt_widget_toolbar.cpp Qt_widget_toolbar.moc
    Qt_widget_move_list_point.cpp Qt_widget_move_list_point.moc
    )

  target_link_libraries( convex_hull_2  ${CGAL_LIBRARIES} ${CGAL_3RD_PARTY_LIBRARIES} )

else()

  message(STATUS "NOTICE: This demo requires CGAL and Qt3, and will not be compiled.")

endif()
