/*!

\mainpage


The goal of the \cgal Open Source Project is to provide easy access to
efficient and reliable geometric algorithms in the form of a C++
library. 

The Computational Geometry Algorithms Library offers data structures
and algorithms like \ref PartTriangulationsAndDelaunayTriangulations "triangulations", \ref PartVoronoiDiagrams "Voronoi diagrams",  \ref PartPolygons,  \ref PartPolyhedra, \ref PartArrangements "arrangements of curves", \ref PartMeshing "mesh generation", \ref PartGeometryProcessing "geometry processing", \ref PartConvexHullAlgorithms "convex hull algorithms", to name just
a few.

All these data structures and algorithms operate on geometric objects
like points and segments, and perform geometric tests on them. These
objects and predicates are regrouped in \ref PartKernels "CGAL Kernels".

Finally, the \ref PartSupportLibrary "Support Library" offers geometric object generators and
spatial sorting functions, as well as a matrix search framework and a
solver for linear and quadratic programs. It further offers interfaces
to third party software such as the GUI libraries Qt, Geomview, and
the Boost Graph Library.

Organization of the Manual
==========================

This manual is organized in several parts covering the many domains
of computational geometry. Each part consists of several chapters,
and each chapter is split into a *user manual*  and a *reference
manual*. The user manual gives the general idea and comes with examples.
The reference manual presents the \sc{Api} of the various classes
and functions.

The manual has a \ref packages  with a short paragraph explaining
what each package is about, what license
it has, and on which other packages it depends. It further provides
links to precompiled demo programs for the Windows platform.

The manual further has a class index, as well as a search box in the upper right of
each page.
The scope of the search box is the package you currently look at and the 
packages it depends on, or  it is the whole manual when you are in
a top level page such as the package overview.

Organization of the Reference Manual
====================================

The \cgal library is a library of class templates. Consequently, we express
the requirements on template arguments by specifying \em concepts
and by providing \em models for concepts. See \ref intro_concept "here"
for an explanation of concept/model.

The reference manual has pages for concepts and for models,
and just as classes can be derived from other classes, concepts
can \em refine other concepts, by adding requirements.

When a class is a model of a concept, its reference manual 
page has a link to the concept, and the API is mainly documented
on the reference manual page of the concept.  As a concept
may refine another concept, the full API of a class is sometimes
distributed over the pages of base classes and over the pages
of several concepts.

Let's have a look at the following concepts and models.

\cgalFigureBegin{Manuak_Fig_concept_model,ConceptModel.svg}
Models and concepts
\cgalFigureEnd

On the reference manual page of the class `Derived` you
will find a link to its base class `Base`, and a link to
the concept `DerivedConcept`.  Only the member function
`Derived::two()` is documented in the reference manual
page of `Derived`, as it inherits the method `one()` from
its base class, and as it has to implement `eins()`
and `zwei()`, because it is model of the concepts
`DerivedConcept` and `BaseConcept`.



Demos and Examples
==================

In the distribution of the library  you find the two directories *demo*
and *examples*. They contain subdirectories for the \cgal packages.  
The demos use third party libraries for the graphical user interface. The 
examples don't have this dependency and most examples are refered to in the 
user manual.

License
=======
%CGAL is distributed under a dual-license scheme. %CGAL can be used
together with Open Source software free of charge. Using %CGAL in
other contexts can be done by obtaining a commercial license from
[GeometryFactory](http://www.geometryfactory.com). For more details
see the \ref licenseIssues "License" page.

\htmlonly
<div style="display:none">
\endhtmlonly

\subpage general_intro
\subpage packages
\subpage dev_manual

\htmlonly
</div>
\endhtmlonly

*/
